/********************** 
Basic style 
***********************/
html {
  box-sizing: border-box;
}

* {
  /* for all elements, make width or height = content + padding + border, then 100vh becomes true 100vh, cannot scroll, i.e. no scrollbar if there is no element after it */
  box-sizing: inherit;
  margin: 0;
  padding: 0;
}

body {
  font-family: "Source Sans Pro", sans-serif;
  font-size: 1rem; /* as it is default so no need to define it, but we should do it */
  color: #404040;
  text-align: center;
}

/*********************** 
Typography 
***********************/
h1 {
  font-size: 2.25rem;
  font-weight: 300;
  color: #fff;
}

strong {
  /* for font-weight always use numbers instead of keywords */
  font-weight: 900;
}

h1 + p {
  color: #f18119;
  font-size: 1.3125rem;
  font-weight: 900;
  text-transform: uppercase;
}

.top-text {
  color: #f18119;
  font-size: 0.625rem;
  font-weight: 900;
  text-transform: uppercase;
  order: -1;
  border-top: 5px solid #f18119;
  padding-top: 2px;
  border-image: linear-gradient(to right, orange, tomato) 1;
  /* make the block element to fit within the content width */
  width: fit-content;
  margin: 0 auto;
}

h2 {
  font-size: 1.3125rem;
}

h2 + p {
  color: #f18119;
  font-size: 1rem;
  font-weight: 900;
  text-transform: uppercase;
}

.fine-print {
  font-size: 0.625rem;
  /* increase letter-spacing for small font size text */
  letter-spacing: 1px;
}

/*********************** 
Layout 
***********************/
/* Intro Section */
/* style for the image inside .intro */
.intro {
  background-image: url(../images/ribs.jpg);
  /* set a background-color opposite to the text as backup if the background-image cannot be loaded for some reason */
  background-color: #404040;
  background-blend-mode: overlay;
  /* padding: top horizontal bottom */
  padding: 0 0.5em 2em;
  /* background image will cover whole container while maintaining aspect ratio but will crop extra parts outside the container  */
  background-size: cover;
  /* image will get fixed at its center */
  background-position: center;
}

/* Main Content Section */
.main-content {
  padding: 2em 1em;
}

/* long texts are unreadable, so to improve readability set the maximum width for the container having text content in 2 sections */
.container {
  max-width: 400px;
  margin: 0 auto;
}

/* style for the text inside .intro. Make the text inside .intro to be in column and separated by spaces */
.container-intro {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  /* prevent .intro to just take content height in small screen */
  min-height: 50vh;
}

/***********************
Form 
***********************/
.email-collector {
  /* for smaller screens, set the form width 80% of container but for larger screen don't stretch it too much, so set max-width also */
  width: 80%;
  max-width: 300px;
  margin: 1em auto;
}

/* overwrite default width of input and button element so that they can take 100% width of their parent container */
input,
.btn {
  width: 100%;
  border-radius: 5px;
}

/* overwrite default properties of input element */
input {
  font-family: inherit;
  text-align: inherit;
  margin-bottom: 0.75em;
  padding: 0.25em;
  border: 1px solid #404040;
  transform: scale(1);
  transition: transform 250ms;
}

input:focus {
  transform: scale(1.1);
}

/* style for button element */
.btn {
  display: inline-block;
  padding: 0.65em 1.5em;
  font-size: 0.625rem;
  text-transform: uppercase;
  font-weight: 900;
  letter-spacing: 1px;
  border: 0;
  cursor: pointer;
}

.btn-primary {
  background-image: linear-gradient(to right, orange, tomato);
  color: #fff;
  transform: scale(1);
  transition: transform 0.25s;
}

.btn-primary:hover,
.btn-primary:focus {
  transform: scale(1.1);
}

/***********************
Responsiveness
***********************/
/* Media Queries for larger screen */
@media screen and (min-width: 500px) {
  body {
    /* bring .intro and .main-content sections side by side, for larger screen, increase font size of all elements */
    display: flex;
    font-size: 1.125rem;
  }
  h1 {
    font-size: 3.5rem;
  }
  h2,
  h1 + p {
    font-size: 1.75rem;
  }

  /* both sections will be take 100 viewport height and equally divided */
  .intro,
  .main-content {
    width: 50%;
    /* instead of height, give min-height so that when screen height gets smaller, the content inside those containers cannot come out of them */
    min-height: 100vh;
  }

  /* make the main content on right which is containing form, to be vertically at the center of page */
  .main-content {
    display: flex;
    flex-direction: column;
    justify-content: center;
  }

  /* .intro has 100vh height so unscrollable (as no element after it) and has padding around its content i.e. around .container-intro. So if we give height: 100vh for .container-intro then .intro height will be more than 100vh as padding will get added to .intro height. So page will become scrollable */
  /* that's why set .container-intro to get 100% of available height inside .intro then page will remain unscrollable */
  .container-intro {
    height: 100%;
  }
}
