.row {
  max-width: $grid-width;
  margin: 0 auto;

  // .row:not(:last-child){} means all except .row:last-child {}
  &:not(:last-child) {
    margin-bottom: $gutter-vertical;

    // small amount of vertical margin gutters needed between columns 
    @include respond(tab-port) {
      margin-bottom: $gutter-vertical-small;
    }
  }

  // for <=900px, give maximum width to row element, so that there can be spaces on both sides of boxes, also give padding around boxes inside row element to get more spaces around boxes 
  @include respond(tab-port) {
    max-width: 50rem;
    padding: 0 3rem;
  }

  @include clearfix; // .row::after {}

  [class^="col"] {
    float: left;

    &:not(:last-child) {
      margin-right: $gutter-horizontal;

      // as each row will have single column so horizontal margin gutters not needed between them  
      @include respond(tab-port) {
        margin-right: 0;
        margin-bottom: $gutter-vertical-small;
      }
    }

    // below 900px, there will be single column in each row 
    @include respond(tab-port) {
      width: 100% !important;     // without !important, width will be overwritten by below widths as media query has 0 specificity but below classes has 10 specificity 
    }
  }

  .col-1-of-2 {
    width: calc((100% - #{$gutter-horizontal}) / 2);
  }
  .col-1-of-3 {
    width: calc((100% - #{$gutter-horizontal} * 2) / 3);
  }
  .col-1-of-4 {
    width: calc((100% - #{$gutter-horizontal} * 3) / 4);
  }
  .col-2-of-3 {
    width: calc(2 * (100% - #{$gutter-horizontal} * 2) / 3 + #{$gutter-horizontal});
  }
  .col-2-of-4 {
    width: calc(2 * (100% - #{$gutter-horizontal} * 3) / 4 + #{$gutter-horizontal});
  }
  .col-3-of-4 {
    width: calc(3 * (100% - #{$gutter-horizontal} * 3) / 4 + 2 * #{$gutter-horizontal});
  }
}
