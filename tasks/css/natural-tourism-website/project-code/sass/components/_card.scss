// CARDS IN TOURS SECTION
// card - 3d element
.card {
  // FUNCTIONALITY
  // use perspective to get 3d effect, larger the value less 3d effect
  perspective: 150rem;
  position: relative;
  // give height to card parent of card side child, it prevents card parent going to 0 height after card side goes out from flow because of abs positioning
  height: 52rem;

  // side - 2d element, has 2 variants - front and back
  &__side {
    height: 52rem;
    transition: all 0.8s ease;
    // make the front and back sides to overlap on each other
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    backface-visibility: hidden;
    border-radius: 3px;
    // don't allow images in card side to overflow and jeopardize border-radius
    overflow: hidden;
    box-shadow: $box-shadow-1;

    &--front {
      background-color: $color-white;
    }
    &--back {
      // initially back side is 180deg rotated
      transform: rotateY(180deg);

      &-1 {
        background-image: linear-gradient(
          to right bottom,
          $color-secondary-light,
          $color-secondary-dark
        );
      }
      &-2 {
        background-image: linear-gradient(
          to right bottom,
          $color-primary-light,
          $color-primary-dark
        );
      }
      &-3 {
        background-image: linear-gradient(
          to right bottom,
          $color-tertiary-light,
          $color-tertiary-dark
        );
      }
    }
  }

  // upon hovering front side goes from 0 to -180deg, i.e. rotates via left side, .card:hover .card__side--front {}
  &:hover &__side--front {
    transform: rotateY(-180deg);
  }
  // upon hovering back side comes from 180deg to 0deg, i.e. rotates via right side, .card:hover .card__side--back {}
  &:hover &__side--back {
    transform: rotateY(0deg);
  }

  // FRONT SIDE STYLING
  &__picture {
    background-size: cover;
    height: 23rem;
    // blending 2 background images - one is gradient and another is image
    background-blend-mode: screen;
    // use -webkit- vendor prefix for partially supported css properties, so that if regular browser cannot support that property, at least webkit browser engine can support that
    -webkit-clip-path: polygon(0 0, 100% 0, 100% 85%, 0 100%);
    // clip the picture using x y co-ordinates at 4 corners starting from top left in clockwise direction
    clip-path: polygon(0 0, 100% 0, 100% 85%, 0 100%);

    &--1 {
      // image address must be w.r.t. compiled css file, not w.r.t. current sass file
      background-image: linear-gradient(
          to right bottom,
          $color-secondary-light,
          $color-secondary-dark
        ),
        url(../img/nat-5.jpg);
    }
    &--2 {
      background-image: linear-gradient(
          to right bottom,
          $color-primary-light,
          $color-primary-dark
        ),
        url(../img/nat-6.jpg);
    }
    &--3 {
      background-image: linear-gradient(
          to right bottom,
          $color-tertiary-light,
          $color-tertiary-dark
        ),
        url(../img/nat-7.jpg);
    }
  }

  &__heading {
    font-size: 2.8rem;
    font-weight: 300;
    text-transform: uppercase;
    text-align: right;
    color: $color-white;
    // make the heading to be on top of image and on right side
    position: absolute;
    top: 12rem;
    right: 2rem;
    width: 75%;
    margin: 0;
  }

  &__heading-span {
    padding: 1rem 1.5rem;
    // box decoration properties like padding will be applied to each fragmented box of same element which are at different lines, as if they are different elements
    -webkit-box-decoration-break: clone;
    box-decoration-break: clone;

    &--1 {
      background-image: linear-gradient(
        to right bottom,
        rgba($color-secondary-light, 0.85),
        rgba($color-secondary-dark, 0.85)
      );
    }
    &--2 {
      background-image: linear-gradient(
        to right bottom,
        rgba($color-primary-light, 0.85),
        rgba($color-primary-dark, 0.85)
      );
    }
    &--3 {
      background-image: linear-gradient(
        to right bottom,
        rgba($color-tertiary-light, 0.85),
        rgba($color-tertiary-dark, 0.85)
      );
    }
  }

  &__details {
    padding: 3rem;

    ul {
      list-style: none;
      width: 80%;
      margin: 0 auto;
      padding-left: 0;

      li {
        text-align: center;
        font-size: 1.5rem;
        padding: 1rem;

        &:not(:last-child) {
          border-bottom: 1.7px solid $color-grey-light-2;
        }
      }
    }
  }

  // BACK SIDE STYLING
  &__cta {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 90%;
    text-align: center;
  }

  &__price-box {
    color: $color-white;
    margin-bottom: 8rem;
  }

  &__price-only {
    font-size: 1.8rem;
    text-transform: uppercase;
  }

  &__price-value {
    font-size: 6rem;
    font-weight: 300;
    margin-top: 0px;
  }

  // -----------------------------------------
  // in small devices like, phone, tablet, hover effect doesn't work, so user cannot rotate card on hover. It means we must bring content on back of card to the front, so that user can see the price and click on BOOK NOW button
  // as it is huge code rewriting so write it at the end, copy all the above code and paste it in here then delete parts that are not needed
  @include respond(tab-port) {
    // give automatic height to the card, it is default value of height. Must specify it here to overwrite normal given height before
    height: auto;
    // give border-radius, box-shadow to the entire card instead of just its sides 
    border-radius: 3px;
    box-shadow: 0 1.5rem 4rem rgba($color-black, .2);
    background-color: $color-white;

    // side - 2d element, has 2 variants - front and back
    // make side as 1d element from 2d element
    &__side {
      height: auto;
      // overwrite absolute position using relative
      position: relative;
      box-shadow: none;

      &--back {
        // overwrite back side from 180deg to 0, means it will be at the front side
        transform: rotateY(0);
        clip-path: polygon(0 15%, 100% 0, 100% 100%, 0 100%);
      }
    }

    // for small screen width, upon hovering front side should not go from 0 to -180deg, it should stay still
    &:hover &__side--front {
      transform: rotateY(0);
    }

    &__details {
      padding: 1rem 3rem;
    }

    // FRONT SIDE STYLING will remain same, no need to overwrite

    // STYLING of BACK SIDE which is now on FRONT SIDE
    &__cta {
      position: relative;
      top: 0%;
      left: 0%;
      transform: translate(0);
      width: 100%;
      padding: 7rem 4rem 4rem 4rem;
    }

    &__price-box {
      margin-bottom: 8rem;
    }

    &__price-value {
      font-size: 4rem;
      margin-bottom: -5rem;
    }
  }
}
